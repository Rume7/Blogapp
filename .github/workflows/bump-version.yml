name: Bump Version on Main

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Maven
        uses: s4u/setup-maven-action@v1.10.0

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Bump Version in Parent and Modules
        id: bump_version
        run: |
          # Get current version from parent pom.xml
          CURRENT_PARENT_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          echo "Current parent version: $CURRENT_PARENT_VERSION"

          # Parse major, minor, patch components
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_PARENT_VERSION"

          # Increment the patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "New version: $NEW_VERSION"

          # Update parent pom.xml with the new version
          sed -i "s|<version>$CURRENT_PARENT_VERSION</version>|<version>$NEW_VERSION</version>|g" pom.xml

          # Update version in <parent> tag for all module pom.xml files
          # This iterates through all pom.xml files found in subdirectories
          # and updates the <version> tag within their <parent> section.
          find . -name "pom.xml" -not -path "./pom.xml" -exec sed -i "s|<parent>\s*<groupId>com.codehacks</groupId>\s*<artifactId>Blogapp</artifactId>\s*<version>$CURRENT_PARENT_VERSION</version>|<parent>\n        <groupId>com.codehacks</groupId>\n        <artifactId>Blogapp</artifactId>\n        <version>$NEW_VERSION</version>|g" {} \;

          # Output the new version for subsequent steps
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Check for changes
        id: git_status
        run: |
          git diff --exit-code || echo "changes_detected=true" >> "$GITHUB_OUTPUT"
        continue-on-error: true

      - name: Commit and Push new version
        if: steps.git_status.outputs.changes_detected == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          git add pom.xml # Add the root pom.xml
          git add */pom.xml # Add all modified module pom.xml files
          git commit -m "chore: Bump version to $NEW_VERSION [skip ci]"
          git push "https://x-oauth-basic:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

      - name: Upload updated POMs (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: updated-poms
          path: |
            pom.xml
            */pom.xml
